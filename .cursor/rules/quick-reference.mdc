# Quick Reference Guide

## Common Commands

### Development
```bash
# Start frontend (React)
cd client && npm run dev

# Start backend (Express)
cd server && npm run dev

# Install dependencies
cd client && npm install
cd server && npm install
```

### Database
```bash
# Create database and tables
mysql -u root -p < server/database/schema.sql

# Connect to MySQL
mysql -u root -p gemstone_db
```

## Key Files

### Frontend
- **Main App**: [client/src/App.jsx](mdc:client/src/App.jsx)
- **Authentication**: [client/src/context/AuthContext.jsx](mdc:client/src/context/AuthContext.jsx)
- **Protected Routes**: [client/src/components/ProtectedRoute.jsx](mdc:client/src/components/ProtectedRoute.jsx)

### Backend
- **Server**: [server/server.js](mdc:server/server.js)
- **Database Schema**: [server/database/schema.sql](mdc:server/database/schema.sql)

## API Endpoints

### Public
- `GET /api/health` - Health check
- `GET /api/gemstones/:id` - Verify gemstone

### Admin (Protected)
- `POST /api/admin/login` - Admin login
- `GET /api/admin/verify` - Verify token
- `POST /api/gemstones` - Create gemstone

## Common Tasks

### Add New Gemstone
1. Login to admin panel
2. Fill gemstone form with details
3. Upload gemstone image
4. Submit form (generates QR code)

### Verify Gemstone
1. Scan QR code with mobile camera
2. Or visit `/verify/:id` directly
3. View gemstone certificate

### Debug Issues
1. Check browser console for frontend errors
2. Check server logs for backend errors
3. Verify database connection
4. Test API endpoints with Postman

## Environment Setup
- **Frontend**: Port 5173 (Vite default)
- **Backend**: Port 5000
- **Database**: MySQL on localhost:3306
- **Uploads**: `server/public/uploads/`

## Security Notes
- JWT tokens expire in 24 hours
- File uploads limited to 5MB images
- Admin authentication required for gemstone creation
- Public verification available for all gemstones
description:
globs:
alwaysApply: false
---
