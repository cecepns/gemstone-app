# Express Backend Coding Standards

## Server Structure
- Main server file: [server/server.js](mdc:server/server.js)
- Use "ANCHOR" comments for major sections
- Organize routes by feature (gemstones, admin, etc.)

## Middleware Organization
- Authentication middleware: `verifyToken` function
- File upload: Multer configuration for image uploads
- CORS: Enabled for all routes
- Error handling: Global error handler at the end

## Route Structure
```javascript
// ANCHOR: Route Section Description
app.post('/api/endpoint', middleware, async (req, res) => {
  try {
    // Route logic here
    res.status(200).json({ success: true, data: result })
  } catch (error) {
    console.error('Error description:', error)
    res.status(500).json({ error: 'Internal Server Error', message: error.message })
  }
})
```

## Database Operations
- Use MySQL2 with connection pool
- Always use parameterized queries to prevent SQL injection
- Handle database errors gracefully
- Use async/await for database operations

## Authentication
- JWT-based authentication for admin routes
- Use `verifyToken` middleware for protected routes
- Store JWT secret in environment variables
- Implement proper error handling for token verification

## File Upload
- Use Multer for file uploads
- Validate file types (images only)
- Set file size limits (5MB)
- Generate unique filenames
- Clean up files on database errors

## Error Handling
- Use try-catch blocks for async operations
- Return consistent error response format
- Log errors for debugging
- Handle specific error types (validation, authentication, etc.)

## Response Format
```javascript
// Success response
res.status(200).json({
  success: true,
  message: 'Operation successful',
  data: result
})

// Error response
res.status(400).json({
  error: 'Error Type',
  message: 'Error description'
})
```

## Security Best Practices
- Validate all input data
- Use parameterized queries
- Implement proper CORS configuration
- Use environment variables for sensitive data
- Implement rate limiting for production
description:
globs:
alwaysApply: false
---
