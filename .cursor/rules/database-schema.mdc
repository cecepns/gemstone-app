# Database Schema

## Database: `gemstone_db`

### Tables

#### `gemstones` Table
Stores gemstone information and verification data.

```sql
CREATE TABLE gemstones (
  id INT PRIMARY KEY AUTO_INCREMENT,
  unique_id_number VARCHAR(255) UNIQUE NOT NULL,
  name VARCHAR(255),
  description TEXT,
  weight_carat DECIMAL(10,2),
  dimensions_mm VARCHAR(100),
  color VARCHAR(100),
  treatment VARCHAR(100),
  origin VARCHAR(100),
  photo_url VARCHAR(500),
  qr_code_data_url TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
```

**Key Fields:**
- `unique_id_number`: Unique identifier for QR code generation (format: GEM-timestamp-random)
- `photo_url`: Path to uploaded gemstone image
- `qr_code_data_url`: Base64 encoded QR code image

#### `admins` Table
Stores admin user credentials for authentication.

```sql
CREATE TABLE admins (
  id INT PRIMARY KEY AUTO_INCREMENT,
  username VARCHAR(100) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
```

**Key Fields:**
- `password`: Bcrypt hashed password
- `username`: Unique admin username

## Database Connection
- **Host**: localhost
- **User**: root
- **Password**: (empty)
- **Database**: gemstone_db
- **Connection Pool**: 10 connections

## Schema File
Database schema is defined in [server/database/schema.sql](mdc:server/database/schema.sql)

## Data Types
- **VARCHAR**: For text fields with length limits
- **TEXT**: For longer text content (descriptions, QR codes)
- **DECIMAL**: For precise numeric values (weight in carats)
- **TIMESTAMP**: For date/time tracking
- **INT**: For IDs and auto-increment fields

## Indexes
- Primary keys on `id` fields
- Unique indexes on `unique_id_number` and `username`
- Consider adding indexes on frequently queried fields

## Backup Recommendations
- Regular backups of the `gemstones` table
- Export admin credentials securely
- Backup uploaded images in `public/uploads/` directory
description:
globs:
alwaysApply: false
---
